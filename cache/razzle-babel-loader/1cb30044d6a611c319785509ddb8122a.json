{"ast":null,"code":"import _asyncToGenerator from \"C:/michael-sean/pubweb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"C:/michael-sean/pubweb/node_modules/@babel/runtime/regenerator\";\nvar Annex = {\n  jsonData: function () {\n    var _jsonData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n      var response, json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(url);\n\n            case 2:\n              response = _context.sent;\n\n              if (!(response.status == 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              json = _context.sent;\n              return _context.abrupt(\"return\", json);\n\n            case 8:\n              throw new Error(response.data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function jsonData(_x) {\n      return _jsonData.apply(this, arguments);\n    }\n\n    return jsonData;\n  }()\n};\nexport default Annex;","map":{"version":3,"sources":["C:/michael-sean/pubweb/src/components/Annex.js"],"names":["Annex","jsonData","url","fetch","response","status","json","Error","data"],"mappings":";;AAAA,IAAMA,KAAK,GAAG;AACZC,EAAAA,QAAQ;AAAA,6EAAE,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaC,KAAK,CAACD,GAAD,CADlB;;AAAA;AACJE,cAAAA,QADI;;AAAA,oBAEJA,QAAQ,CAACC,MAAT,IAAmB,GAFf;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGWD,QAAQ,CAACE,IAAT,EAHX;;AAAA;AAGFA,cAAAA,IAHE;AAAA,+CAICA,IAJD;;AAAA;AAAA,oBAMF,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,IAAnB,CANE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADI,CAAd;AAWA,eAAeR,KAAf","sourcesContent":["const Annex = {\r\n  jsonData: async (url) => {\r\n    let response = await fetch(url)\r\n    if (response.status == 200) {\r\n      let json = await response.json()\r\n      return json\r\n    }\r\n    throw new Error(response.data)\r\n  }\r\n}\r\n\r\nexport default Annex;"]},"metadata":{},"sourceType":"module"}