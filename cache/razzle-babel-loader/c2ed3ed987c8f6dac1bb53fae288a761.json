{"ast":null,"code":"var _jsxFileName = \"C:\\\\michael-sean\\\\pubweb\\\\src\\\\server.js\";\nvar __jsx = React.createElement;\n//import App from './App';\n//import React from 'react';\n//import { StaticRouter } from 'react-router-dom';\n//import express from 'express';\n//import { renderToString } from 'react-dom/server';\n//import { Helmet } from 'react-helmet';\n//import { ServerStyleSheet } from 'styled-components';\n//\n//const assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n//\n//const cssLinksFromAssets = (assets, entrypoint) => {\n//  return assets[entrypoint] ? assets[entrypoint].css ?\n//  assets[entrypoint].css.map(asset=>\n//    `<link rel=\"stylesheet\" href=\"${asset}\">`\n//  ).join('') : '' : '';\n//};\n//\n//const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n//  return assets[entrypoint] ? assets[entrypoint].js ?\n//  assets[entrypoint].js.map(asset=>\n//    `<script src=\"${asset}\"${extra}></script>`\n//  ).join('') : '' : '';\n//};\n//\n//const server = express();\n//server\n//  .disable('x-powered-by')\n//  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n//  .get('/*', (req, res) => {\n//    const context = {};\n//    const markup = renderToString(\n//      <StaticRouter context={context} location={req.url}>\n//        <App />\n//      </StaticRouter>\n//    );\n//\n//    if (context.url) {\n//      res.redirect(context.url);\n//    } else {\n//      res.status(200).send(\n//        `<!doctype html>\n//        <html lang=\"\">\n//          <head>\n//            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//            <meta charset=\"utf-8\" />\n//            <title>Welcome to Razzle</title>\n//            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n//            ${cssLinksFromAssets(assets, 'client')}\n//          </head>\n//          <body>\n//            <div id=\"root\">${markup}</div>\n//            ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n//          </body>\n//        </html>`\n//      );\n//    }\n//  });\n//\n//export default server;\nimport App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\nimport { Helmet } from 'react-helmet';\nimport { ServerStyleSheet } from 'styled-components';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', (req, res) => {\n  const context = {};\n  const sheet = new ServerStyleSheet();\n  const markup = renderToString(__jsx(StaticRouter, {\n    context: context,\n    location: req.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n  const styleTags = sheet.getStyleTags();\n  var helmet = Helmet.renderStatic();\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200).send(`<!doctype html>\n          <html ${helmet.htmlAttributes.toString()} lang=\"en\" xml:lang=\"en\">\n            <head>\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n                <meta charset=\"utf-8\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n                <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"> \n                ${helmet.meta.toString()}\n                ${helmet.title.toString()}\n                ${helmet.link.toString()}\n                ${assets.client.css ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">` : ''}\n                ${false ? `<script src=\"${assets.client.js}\" defer></script>` : `<script src=\"${assets.client.js}\" defer crossorigin></script>`}\n                ${styleTags}\n            </head>\n            <body ${helmet.bodyAttributes.toString()}>\n                <div id=\"root\">${markup}</div>\n            </body>\n        </html>`);\n  }\n});\nexport default server;","map":{"version":3,"sources":["C:/michael-sean/pubweb/src/server.js"],"names":["App","React","StaticRouter","express","renderToString","Helmet","ServerStyleSheet","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","req","res","context","sheet","markup","url","styleTags","getStyleTags","helmet","renderStatic","redirect","status","send","htmlAttributes","toString","meta","title","link","client","css","js","bodyAttributes"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAtB;;AAEA,MAAMC,MAAM,GAAGT,OAAO,EAAtB;AACAS,MAAM,CACHC,OADH,CACW,cADX,EAEGC,GAFH,CAEOX,OAAO,CAACY,MAAR,CAAeN,OAAO,CAACC,GAAR,CAAYM,iBAA3B,CAFP,EAGGC,GAHH,CAGO,IAHP,EAGa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvB,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,KAAK,GAAG,IAAIf,gBAAJ,EAAd;AACA,QAAMgB,MAAM,GAAGlB,cAAc,CAC3B,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEgB,OAAvB;AAAgC,IAAA,QAAQ,EAAEF,GAAG,CAACK,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAD2B,CAA7B;AAKA,QAAMC,SAAS,GAAGH,KAAK,CAACI,YAAN,EAAlB;AACA,MAAIC,MAAM,GAAGrB,MAAM,CAACsB,YAAP,EAAb;;AACA,MAAIP,OAAO,CAACG,GAAZ,EAAiB;AACfJ,IAAAA,GAAG,CAACS,QAAJ,CAAaR,OAAO,CAACG,GAArB;AACD,GAFD,MAEO;AACLJ,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACG;AACT,kBAAkBJ,MAAM,CAACK,cAAP,CAAsBC,QAAtB,EAAiC;AACnD;AACA;AACA;AACA;AACA;AACA,kBAAkBN,MAAM,CAACO,IAAP,CAAYD,QAAZ,EAAuB;AACzC,kBAAkBN,MAAM,CAACQ,KAAP,CAAaF,QAAb,EAAwB;AAC1C,kBAAkBN,MAAM,CAACS,IAAP,CAAYH,QAAZ,EAAuB;AACzC,kBAAkBzB,MAAM,CAAC6B,MAAP,CAAcC,GAAd,GAAqB,gCAA+B9B,MAAM,CAAC6B,MAAP,CAAcC,GAAI,IAAtE,GAA4E,EAAG;AACjG,kBAAkB,QAAyC,gBAAe9B,MAAM,CAAC6B,MAAP,CAAcE,EAAG,mBAAzE,GACK,gBAAe/B,MAAM,CAAC6B,MAAP,CAAcE,EAAG,+BACtC;AACjB,kBAAkBd,SAAU;AAC5B;AACA,oBAAoBE,MAAM,CAACa,cAAP,CAAsBP,QAAtB,EAAiC;AACrD,iCAAiCV,MAAO;AACxC;AACA,gBApBM;AAsBD;AACF,CAvCH;AAwCA,eAAeV,MAAf","sourcesContent":["//import App from './App';\n//import React from 'react';\n//import { StaticRouter } from 'react-router-dom';\n//import express from 'express';\n//import { renderToString } from 'react-dom/server';\n//import { Helmet } from 'react-helmet';\n//import { ServerStyleSheet } from 'styled-components';\n//\n//const assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n//\n//const cssLinksFromAssets = (assets, entrypoint) => {\n//  return assets[entrypoint] ? assets[entrypoint].css ?\n//  assets[entrypoint].css.map(asset=>\n//    `<link rel=\"stylesheet\" href=\"${asset}\">`\n//  ).join('') : '' : '';\n//};\n//\n//const jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n//  return assets[entrypoint] ? assets[entrypoint].js ?\n//  assets[entrypoint].js.map(asset=>\n//    `<script src=\"${asset}\"${extra}></script>`\n//  ).join('') : '' : '';\n//};\n//\n//const server = express();\n//server\n//  .disable('x-powered-by')\n//  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n//  .get('/*', (req, res) => {\n//    const context = {};\n//    const markup = renderToString(\n//      <StaticRouter context={context} location={req.url}>\n//        <App />\n//      </StaticRouter>\n//    );\n//\n//    if (context.url) {\n//      res.redirect(context.url);\n//    } else {\n//      res.status(200).send(\n//        `<!doctype html>\n//        <html lang=\"\">\n//          <head>\n//            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//            <meta charset=\"utf-8\" />\n//            <title>Welcome to Razzle</title>\n//            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n//            ${cssLinksFromAssets(assets, 'client')}\n//          </head>\n//          <body>\n//            <div id=\"root\">${markup}</div>\n//            ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n//          </body>\n//        </html>`\n//      );\n//    }\n//  });\n//\n//export default server;\n\n\nimport App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\nimport { Helmet } from 'react-helmet';\nimport { ServerStyleSheet } from 'styled-components';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst server = express();\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (req, res) => {\n    const context = {};\n    const sheet = new ServerStyleSheet();\n    const markup = renderToString(\n      <StaticRouter context={context} location={req.url}>\n        <App />\n      </StaticRouter>\n    );\n    const styleTags = sheet.getStyleTags();\n    var helmet = Helmet.renderStatic();\n    if (context.url) {\n      res.redirect(context.url);\n    } else {\n      res.status(200).send(\n        `<!doctype html>\n          <html ${helmet.htmlAttributes.toString()} lang=\"en\" xml:lang=\"en\">\n            <head>\n                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n                <meta charset=\"utf-8\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n                <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"> \n                ${helmet.meta.toString()}\n                ${helmet.title.toString()}\n                ${helmet.link.toString()}\n                ${assets.client.css ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">` : ''}\n                ${process.env.NODE_ENV === 'production' ? `<script src=\"${assets.client.js}\" defer></script>`\n                    : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n                }\n                ${styleTags}\n            </head>\n            <body ${helmet.bodyAttributes.toString()}>\n                <div id=\"root\">${markup}</div>\n            </body>\n        </html>`\n      );\n    }\n  });\nexport default server;"]},"metadata":{},"sourceType":"module"}