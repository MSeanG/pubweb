{"ast":null,"code":"//import express from 'express';\n//\n//let app = require('./server').default;\n//\n//if (module.hot) {\n//  module.hot.accept('./server', function() {\n//    console.log('🔁  HMR Reloading `./server`...');\n//    try {\n//      app = require('./server').default;\n//    } catch (error) {\n//      console.error(error);\n//    }\n//  });\n//  console.info('✅  Server-side HMR Enabled!');\n//}\n//\n//const port = process.env.PORT || 3000;\n//\n//export default express()\n//  .use((req, res) => app.handle(req, res))\n//  .listen(port, function(err) {\n//    if (err) {\n//      console.error(err);\n//      return;\n//    }\n//    console.log(`> Started on port ${port}`);\n//  });\nimport app from './server';\nexport let handler;\n\nif (false) {\n  const awsServerlessExpress = require('aws-serverless-express');\n\n  const binaryMimeTypes = ['application/octet-stream', 'font/eot', 'font/opentype', 'font/otf', 'image/jpeg', 'image/png', 'image/svg+xml'];\n  const server = awsServerlessExpress.createServer(app, null, binaryMimeTypes);\n\n  handler = (event, context, callback) => {\n    awsServerlessExpress.proxy(server, event, context);\n  };\n} else {\n  const http = require('http');\n\n  const server = http.createServer(app);\n  let currentApp = app;\n  server.listen(process.env.PORT || 3000, error => {\n    if (error) {\n      console.log(error);\n    }\n\n    console.log('🚀 started');\n  });\n\n  if (module.hot) {\n    console.log('✅  Server-side HMR Enabled!');\n    module.hot.accept('./server', () => {\n      console.log('🔁  HMR Reloading `./server`...');\n      server.removeListener('request', currentApp);\n\n      const newApp = require('./server').default;\n\n      server.on('request', newApp);\n      currentApp = newApp;\n    });\n  }\n}","map":{"version":3,"sources":["C:/michael-sean/pubweb/src/index.js"],"names":["app","handler","awsServerlessExpress","require","binaryMimeTypes","server","createServer","event","context","callback","proxy","http","currentApp","listen","process","env","PORT","error","console","log","module","hot","accept","removeListener","newApp","default","on"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,IAAIC,OAAJ;;AAEP,WAA2C;AACzC,QAAMC,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAApC;;AAEA,QAAMC,eAAe,GAAG,CACtB,0BADsB,EAEtB,UAFsB,EAGtB,eAHsB,EAItB,UAJsB,EAKtB,YALsB,EAMtB,WANsB,EAOtB,eAPsB,CAAxB;AASA,QAAMC,MAAM,GAAGH,oBAAoB,CAACI,YAArB,CAAkCN,GAAlC,EAAuC,IAAvC,EAA6CI,eAA7C,CAAf;;AAEAH,EAAAA,OAAO,GAAG,CAACM,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,KAA8B;AACtCP,IAAAA,oBAAoB,CAACQ,KAArB,CAA2BL,MAA3B,EAAmCE,KAAnC,EAA0CC,OAA1C;AACD,GAFD;AAGD,CAjBD,MAiBO;AACL,QAAMG,IAAI,GAAGR,OAAO,CAAC,MAAD,CAApB;;AAEA,QAAME,MAAM,GAAGM,IAAI,CAACL,YAAL,CAAkBN,GAAlB,CAAf;AAEA,MAAIY,UAAU,GAAGZ,GAAjB;AAEAK,EAAAA,MAAM,CAACQ,MAAP,CAAcC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC,EAAwCC,KAAK,IAAI;AAC/C,QAAIA,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAND;;AAQA,MAAIC,MAAM,CAACC,GAAX,EAAgB;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AAEAC,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,UAAlB,EAA8B,MAAM;AAClCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAd,MAAAA,MAAM,CAACkB,cAAP,CAAsB,SAAtB,EAAiCX,UAAjC;;AACA,YAAMY,MAAM,GAAGrB,OAAO,CAAC,UAAD,CAAP,CAAoBsB,OAAnC;;AACApB,MAAAA,MAAM,CAACqB,EAAP,CAAU,SAAV,EAAqBF,MAArB;AACAZ,MAAAA,UAAU,GAAGY,MAAb;AACD,KAND;AAOD;AACF","sourcesContent":["//import express from 'express';\n//\n//let app = require('./server').default;\n//\n//if (module.hot) {\n//  module.hot.accept('./server', function() {\n//    console.log('🔁  HMR Reloading `./server`...');\n//    try {\n//      app = require('./server').default;\n//    } catch (error) {\n//      console.error(error);\n//    }\n//  });\n//  console.info('✅  Server-side HMR Enabled!');\n//}\n//\n//const port = process.env.PORT || 3000;\n//\n//export default express()\n//  .use((req, res) => app.handle(req, res))\n//  .listen(port, function(err) {\n//    if (err) {\n//      console.error(err);\n//      return;\n//    }\n//    console.log(`> Started on port ${port}`);\n//  });\n\nimport app from './server'\nexport let handler\n\nif (process.env.NODE_ENV === 'production') {\n  const awsServerlessExpress = require('aws-serverless-express')\n\n  const binaryMimeTypes = [\n    'application/octet-stream',\n    'font/eot',\n    'font/opentype',\n    'font/otf',\n    'image/jpeg',\n    'image/png',\n    'image/svg+xml',\n  ]\n  const server = awsServerlessExpress.createServer(app, null, binaryMimeTypes)\n\n  handler = (event, context, callback) => {\n    awsServerlessExpress.proxy(server, event, context)\n  }\n} else {\n  const http = require('http')\n\n  const server = http.createServer(app)\n\n  let currentApp = app\n\n  server.listen(process.env.PORT || 3000, error => {\n    if (error) {\n      console.log(error)\n    }\n\n    console.log('🚀 started')\n  })\n\n  if (module.hot) {\n    console.log('✅  Server-side HMR Enabled!')\n\n    module.hot.accept('./server', () => {\n      console.log('🔁  HMR Reloading `./server`...')\n      server.removeListener('request', currentApp)\n      const newApp = require('./server').default\n      server.on('request', newApp)\n      currentApp = newApp\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}