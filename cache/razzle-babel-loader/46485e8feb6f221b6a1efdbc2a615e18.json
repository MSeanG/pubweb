{"ast":null,"code":"var _jsxFileName = \"C:\\\\michael-sean\\\\pubweb\\\\src\\\\Home\\\\Home.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport HomeListingCard from '../components/HomeListingCard';\nimport { HomeStyles } from './Home.styled';\nimport listings from '../data/listings';\nimport companyLogo from '../image/logo.png';\n\nvar Home = function Home() {\n  var loadMoreBtn = __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setCount(function (prevCount) {\n        return prevCount + 3;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 37\n    }\n  }, \"Load more\")); //console.log(listed);\n\n\n  var _useState = useState(9),\n      count = _useState[0],\n      setCount = _useState[1],\n      n = listings.length; //const sortedItems = React.useMemo(() => {\n  //  let sortableItems = [...items];\n  //  if (sortConfig !== null) {\n  //    sortableItems.sort((a, b) => {\n  //      if (a[sortConfig.key] < b[sortConfig.key]) {\n  //        return sortConfig.direction === 'ascending' ? -1 : 1;\n  //      }\n  //      if (a[sortConfig.key] > b[sortConfig.key]) {\n  //        return sortConfig.direction === 'ascending' ? 1 : -1;\n  //      }\n  //      return 0;\n  //    });\n  //  }\n  //  return sortableItems;\n  //}, [items, sortConfig]);\n  //\n  //const homeList = (props) => {\n  //  const {items, requestSort, sortConfig } = useSortableData(props.listings);\n  //  const getClassNamesFor = (name) => {\n  //    if (!sortConfig) {\n  //      return;\n  //    }\n  //    return sortConfig.key === name ? sortConfig.direction : undefined;\n  //  };\n  //  return (\n  //    <div className=\"sort-bar\">\n  //      <div>{n} homes available</div>\n  //      <div className=\"price-select\">\n  //        Sort by: <button\n  //          type=\"button\"\n  //          onClick={() => requestSort('price')}\n  //          className={getClassNamesFor('price')}\n  //        >\n  //          Price\n  //        </button>\n  //      </div>\n  //    </div>\n  //  );\n  //}\n\n\n  if (count > n) {\n    loadMoreBtn = '';\n  }\n\n  ;\n  return __jsx(HomeStyles, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Pubweb Code Challenge\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Pubweb Code Challenge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })), __jsx(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: companyLogo,\n    alt: \"Clayton Logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"sort-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, n, \" homes available\"), __jsx(\"div\", {\n    className: \"price-select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Sort by: \", __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }\n  }, \"Price\"))), __jsx(\"ul\", {\n    className: \"listings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, listings.slice(0, count).map(function (data, key) {\n    return __jsx(\"li\", {\n      key: key,\n      className: \"listing\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(HomeListingCard, {\n      key: key,\n      imageURL: data.imageURL,\n      homeName: data.homeName,\n      startingPrice: data.startingPrice,\n      beds: data.beds,\n      baths: data.baths,\n      sqft: data.sqft,\n      isMultiSection: data.isMultiSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: \"load-more\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, loadMoreBtn), __jsx(\"footer\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Copyright 2020 Clayton Homes. All Rights Reserved.\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/michael-sean/pubweb/src/Home/Home.js"],"names":["React","useState","Helmet","HomeListingCard","HomeStyles","listings","companyLogo","Home","loadMoreBtn","setCount","prevCount","count","n","length","slice","map","data","key","imageURL","homeName","startingPrice","beds","baths","sqft","isMultiSection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport HomeListingCard from '../components/HomeListingCard';\r\nimport { HomeStyles } from './Home.styled';\r\nimport  listings  from '../data/listings';\r\nimport companyLogo from '../image/logo.png';\r\n\r\nconst Home = () => {\r\n\r\n  let loadMoreBtn = <React.Fragment><button type=\"button\" onClick={() => setCount(prevCount => prevCount + 3)}>Load more</button></React.Fragment>;\r\n  //console.log(listed);\r\n  const\r\n    [count, setCount] = useState(9),\r\n    //[sortConfig, setSortConfig] = useState(null),\r\n    n = listings.length;\r\n\r\n    //const sortedItems = React.useMemo(() => {\r\n    //  let sortableItems = [...items];\r\n    //  if (sortConfig !== null) {\r\n    //    sortableItems.sort((a, b) => {\r\n    //      if (a[sortConfig.key] < b[sortConfig.key]) {\r\n    //        return sortConfig.direction === 'ascending' ? -1 : 1;\r\n    //      }\r\n    //      if (a[sortConfig.key] > b[sortConfig.key]) {\r\n    //        return sortConfig.direction === 'ascending' ? 1 : -1;\r\n    //      }\r\n    //      return 0;\r\n    //    });\r\n    //  }\r\n    //  return sortableItems;\r\n    //}, [items, sortConfig]);\r\n//\r\n    //const homeList = (props) => {\r\n    //  const {items, requestSort, sortConfig } = useSortableData(props.listings);\r\n    //  const getClassNamesFor = (name) => {\r\n    //    if (!sortConfig) {\r\n    //      return;\r\n    //    }\r\n    //    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    //  };\r\n    //  return (\r\n    //    <div className=\"sort-bar\">\r\n    //      <div>{n} homes available</div>\r\n    //      <div className=\"price-select\">\r\n    //        Sort by: <button\r\n    //          type=\"button\"\r\n    //          onClick={() => requestSort('price')}\r\n    //          className={getClassNamesFor('price')}\r\n    //        >\r\n    //          Price\r\n    //        </button>\r\n    //      </div>\r\n    //    </div>\r\n    //  );\r\n    //}\r\n\r\n  if (count > n) {\r\n    loadMoreBtn = '';\r\n  };\r\n\r\n  return (\r\n    <HomeStyles>\r\n\r\n      <Helmet>\r\n        <title>Pubweb Code Challenge</title>\r\n        <meta name=\"description\" content=\"Pubweb Code Challenge\" />\r\n      </Helmet>\r\n\r\n      <header><img src={companyLogo} alt=\"Clayton Logo\" /></header>\r\n\r\n      <div className=\"sort-bar\">\r\n        <div>{n} homes available</div>\r\n        <div className=\"price-select\">\r\n          Sort by: <button>Price</button>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"listings\">\r\n        {listings.slice(0, count).map((data, key) => {\r\n          return (\r\n            <li key={key} className=\"listing\">\r\n              <HomeListingCard \r\n                key={key}\r\n                imageURL={data.imageURL}\r\n                homeName={data.homeName}\r\n                startingPrice={data.startingPrice}\r\n                beds={data.beds}\r\n                baths={data.baths}\r\n                sqft={data.sqft}\r\n                isMultiSection={data.isMultiSection}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <div className=\"load-more\">{loadMoreBtn}</div>\r\n\r\n      <footer>Copyright 2020 Clayton Homes. All Rights Reserved.</footer>\r\n\r\n    </HomeStyles>\r\n  )\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}