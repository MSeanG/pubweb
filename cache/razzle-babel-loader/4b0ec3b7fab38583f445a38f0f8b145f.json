{"ast":null,"code":"var _jsxFileName = \"C:\\\\michael-sean\\\\pubweb\\\\src\\\\server.js\";\nvar __jsx = React.createElement;\nimport App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ? assets[entrypoint].css.map(asset => `<link rel=\"stylesheet\" href=\"${asset}\">`).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ? assets[entrypoint].js.map(asset => `<script src=\"${asset}\"${extra}></script>`).join('') : '' : '';\n};\n\nconst server = express();\nserver.disable('x-powered-by').use(express.static(process.env.RAZZLE_PUBLIC_DIR)).get('/*', (req, res) => {\n  const context = {};\n  const markup = renderToString(__jsx(StaticRouter, {\n    context: context,\n    location: req.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })));\n\n  if (context.url) {\n    res.redirect(context.url);\n  } else {\n    res.status(200).send(`<!doctype html>\n        <html lang=\"\">\n          <head>\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n            <meta charset=\"utf-8\" />\n            <title>Welcome to Razzle</title>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            ${cssLinksFromAssets(assets, 'client')}\n          </head>\n          <body>\n            <div id=\"root\">${markup}</div>\n            ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n          </body>\n        </html>`);\n  }\n});\nexport default server; //import App from './App';\n//import React from 'react';\n//import { StaticRouter } from 'react-router-dom';\n//import express from 'express';\n//import { renderToString } from 'react-dom/server';\n//import { Helmet } from 'react-helmet';\n//import { ServerStyleSheet } from 'styled-components';\n//\n//const assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n//\n//const server = express();\n//server\n//  .disable('x-powered-by')\n//  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n//  .get('/*', (req, res) => {\n//    const context = {};\n//    const sheet = new ServerStyleSheet();\n//    const markup = renderToString(\n//      <StaticRouter context={context} location={req.url}>\n//        <App />\n//      </StaticRouter>\n//    );\n//    const styleTags = sheet.getStyleTags();\n//    var helmet = Helmet.renderStatic();\n//    if (context.url) {\n//      res.redirect(context.url);\n//    } else {\n//      res.status(200).send(\n//        `<!doctype html>\n//          <html ${helmet.htmlAttributes.toString()} lang=\"en\" xml:lang=\"en\">\n//            <head>\n//                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//                <meta charset=\"utf-8\" />\n//                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n//                <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"> \n//                ${helmet.meta.toString()}\n//                ${helmet.title.toString()}\n//                ${helmet.link.toString()}\n//                ${assets.client.css ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">` : ''}\n//                ${process.env.NODE_ENV === 'production' ? `<script src=\"${assets.client.js}\" defer></script>`\n//                    : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n//                }\n//                ${styleTags}\n//            </head>\n//            <body ${helmet.bodyAttributes.toString()}>\n//                <div id=\"root\">${markup}</div>\n//            </body>\n//        </html>`\n//      );\n//    }\n//  });\n//export default server;","map":{"version":3,"sources":["C:/michael-sean/pubweb/src/server.js"],"names":["App","React","StaticRouter","express","renderToString","assets","require","process","env","RAZZLE_ASSETS_MANIFEST","cssLinksFromAssets","entrypoint","css","map","asset","join","jsScriptTagsFromAssets","extra","js","server","disable","use","static","RAZZLE_PUBLIC_DIR","get","req","res","context","markup","url","redirect","status","send"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAtB;;AAEA,MAAMC,kBAAkB,GAAG,CAACL,MAAD,EAASM,UAAT,KAAwB;AACjD,SAAON,MAAM,CAACM,UAAD,CAAN,GAAqBN,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,GAC5BP,MAAM,CAACM,UAAD,CAAN,CAAmBC,GAAnB,CAAuBC,GAAvB,CAA2BC,KAAK,IAC7B,gCAA+BA,KAAM,IADxC,EAEEC,IAFF,CAEO,EAFP,CAD4B,GAGf,EAHN,GAGW,EAHlB;AAID,CALD;;AAOA,MAAMC,sBAAsB,GAAG,CAACX,MAAD,EAASM,UAAT,EAAqBM,KAAK,GAAG,EAA7B,KAAoC;AACjE,SAAOZ,MAAM,CAACM,UAAD,CAAN,GAAqBN,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,GAC5Bb,MAAM,CAACM,UAAD,CAAN,CAAmBO,EAAnB,CAAsBL,GAAtB,CAA0BC,KAAK,IAC5B,gBAAeA,KAAM,IAAGG,KAAM,YADjC,EAEEF,IAFF,CAEO,EAFP,CAD4B,GAGf,EAHN,GAGW,EAHlB;AAID,CALD;;AAOA,MAAMI,MAAM,GAAGhB,OAAO,EAAtB;AACAgB,MAAM,CACHC,OADH,CACW,cADX,EAEGC,GAFH,CAEOlB,OAAO,CAACmB,MAAR,CAAef,OAAO,CAACC,GAAR,CAAYe,iBAA3B,CAFP,EAGGC,GAHH,CAGO,IAHP,EAGa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACvB,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,MAAM,GAAGxB,cAAc,CAC3B,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEuB,OAAvB;AAAgC,IAAA,QAAQ,EAAEF,GAAG,CAACI,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAD2B,CAA7B;;AAMA,MAAIF,OAAO,CAACE,GAAZ,EAAiB;AACfH,IAAAA,GAAG,CAACI,QAAJ,CAAaH,OAAO,CAACE,GAArB;AACD,GAFD,MAEO;AACLH,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAActB,kBAAkB,CAACL,MAAD,EAAS,QAAT,CAAmB;AACnD;AACA;AACA,6BAA6BuB,MAAO;AACpC,cAAcZ,sBAAsB,CAACX,MAAD,EAAS,QAAT,EAAmB,oBAAnB,CAAyC;AAC7E;AACA,gBAdM;AAgBD;AACF,CA/BH;AAiCA,eAAec,MAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import App from './App';\nimport React from 'react';\nimport { StaticRouter } from 'react-router-dom';\nimport express from 'express';\nimport { renderToString } from 'react-dom/server';\n\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n\nconst cssLinksFromAssets = (assets, entrypoint) => {\n  return assets[entrypoint] ? assets[entrypoint].css ?\n  assets[entrypoint].css.map(asset=>\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\n  ).join('') : '' : '';\n};\n\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\n  return assets[entrypoint] ? assets[entrypoint].js ?\n  assets[entrypoint].js.map(asset=>\n    `<script src=\"${asset}\"${extra}></script>`\n  ).join('') : '' : '';\n};\n\nconst server = express();\nserver\n  .disable('x-powered-by')\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n  .get('/*', (req, res) => {\n    const context = {};\n    const markup = renderToString(\n      <StaticRouter context={context} location={req.url}>\n        <App />\n      </StaticRouter>\n    );\n\n    if (context.url) {\n      res.redirect(context.url);\n    } else {\n      res.status(200).send(\n        `<!doctype html>\n        <html lang=\"\">\n          <head>\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n            <meta charset=\"utf-8\" />\n            <title>Welcome to Razzle</title>\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            ${cssLinksFromAssets(assets, 'client')}\n          </head>\n          <body>\n            <div id=\"root\">${markup}</div>\n            ${jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')}\n          </body>\n        </html>`\n      );\n    }\n  });\n\nexport default server;\n\n\n//import App from './App';\n//import React from 'react';\n//import { StaticRouter } from 'react-router-dom';\n//import express from 'express';\n//import { renderToString } from 'react-dom/server';\n//import { Helmet } from 'react-helmet';\n//import { ServerStyleSheet } from 'styled-components';\n//\n//const assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\n//\n//const server = express();\n//server\n//  .disable('x-powered-by')\n//  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\n//  .get('/*', (req, res) => {\n//    const context = {};\n//    const sheet = new ServerStyleSheet();\n//    const markup = renderToString(\n//      <StaticRouter context={context} location={req.url}>\n//        <App />\n//      </StaticRouter>\n//    );\n//    const styleTags = sheet.getStyleTags();\n//    var helmet = Helmet.renderStatic();\n//    if (context.url) {\n//      res.redirect(context.url);\n//    } else {\n//      res.status(200).send(\n//        `<!doctype html>\n//          <html ${helmet.htmlAttributes.toString()} lang=\"en\" xml:lang=\"en\">\n//            <head>\n//                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//                <meta charset=\"utf-8\" />\n//                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n//                <link rel=\"shortcut icon\" href=\"favicon.ico\" type=\"image/x-icon\"> \n//                ${helmet.meta.toString()}\n//                ${helmet.title.toString()}\n//                ${helmet.link.toString()}\n//                ${assets.client.css ? `<link rel=\"stylesheet\" href=\"${assets.client.css}\">` : ''}\n//                ${process.env.NODE_ENV === 'production' ? `<script src=\"${assets.client.js}\" defer></script>`\n//                    : `<script src=\"${assets.client.js}\" defer crossorigin></script>`\n//                }\n//                ${styleTags}\n//            </head>\n//            <body ${helmet.bodyAttributes.toString()}>\n//                <div id=\"root\">${markup}</div>\n//            </body>\n//        </html>`\n//      );\n//    }\n//  });\n//export default server;"]},"metadata":{},"sourceType":"module"}