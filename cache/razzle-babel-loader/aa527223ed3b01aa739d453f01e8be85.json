{"ast":null,"code":"import _toConsumableArray from \"C:/michael-sean/pubweb/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/michael-sean/pubweb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\michael-sean\\\\pubweb\\\\src\\\\Home\\\\Home.js\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport HomeListingCard from '../components/HomeListingCard';\nimport { HomeStyles } from './Home.styled';\nimport listings from '../data/listings';\nimport companyLogo from '../image/logo.png';\n\nvar useSortableData = function useSortableData(items) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  var _React$useState = React.useState(config),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sortConfig = _React$useState2[0],\n      setSortConfig = _React$useState2[1];\n\n  var sortedItems = React.useMemo(function () {\n    var sortableItems = _toConsumableArray(items);\n\n    if (sortConfig !== null) {\n      sortableItems.sort(function (a, b) {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n\n        return 0;\n      });\n    }\n\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  var requestSort = function requestSort(key) {\n    console.log('sort requested');\n    var direction = 'ascending';\n\n    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortConfig({\n      key: key,\n      direction: direction\n    });\n  };\n\n  return {\n    items: sortedItems,\n    requestSort: requestSort,\n    sortConfig: sortConfig\n  };\n};\n\nvar Home = function Home() {\n  var loadMoreBtn = __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setCount(function (prevCount) {\n        return prevCount + 3;\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }, \"Load more\")),\n      listed = listings;\n\n  var _useState = useState(9),\n      count = _useState[0],\n      setCount = _useState[1],\n      n = listings.length,\n      _useSortableData = useSortableData(listed),\n      items = _useSortableData.items,\n      requestSort = _useSortableData.requestSort,\n      sortConfig = _useSortableData.sortConfig,\n      getClassNamesFor = function getClassNamesFor(name) {\n    if (!sortConfig) {\n      return;\n    }\n\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n\n  if (count > n) {\n    loadMoreBtn = '';\n  }\n\n  ;\n  return __jsx(HomeStyles, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(Helmet, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Pubweb Code Challenge\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Pubweb Code Challenge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), __jsx(\"header\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: companyLogo,\n    alt: \"Clayton Logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"sort-bar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, n, \" homes available\"), __jsx(\"div\", {\n    className: \"price-select\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Sort by:\", __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return requestSort('startingPrice');\n    },\n    className: getClassNamesFor('startingPrice'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Price\"))), __jsx(\"ul\", {\n    className: \"listings\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, items.slice(0, count).map(function (item, key) {\n    return __jsx(\"li\", {\n      key: key,\n      className: \"listing\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(HomeListingCard, {\n      key: key,\n      imageURL: item.imageURL,\n      homeName: item.homeName,\n      startingPrice: item.startingPrice,\n      beds: item.beds,\n      baths: item.baths,\n      sqft: item.sqft,\n      isMultiSection: item.isMultiSection,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: \"load-more\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, loadMoreBtn), __jsx(\"footer\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Copyright 2020 Clayton Homes. All Rights Reserved.\"));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/michael-sean/pubweb/src/Home/Home.js"],"names":["React","useState","Helmet","HomeListingCard","HomeStyles","listings","companyLogo","useSortableData","items","config","sortConfig","setSortConfig","sortedItems","useMemo","sortableItems","sort","a","b","key","direction","requestSort","console","log","Home","loadMoreBtn","setCount","prevCount","listed","count","n","length","getClassNamesFor","name","undefined","slice","map","item","imageURL","homeName","startingPrice","beds","baths","sqft","isMultiSection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport HomeListingCard from '../components/HomeListingCard';\r\nimport { HomeStyles } from './Home.styled';\r\nimport  listings  from '../data/listings';\r\nimport companyLogo from '../image/logo.png';\r\n\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = React.useState(config);\r\n\r\n  const sortedItems = React.useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === 'ascending' ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    console.log('sort requested');\r\n    let direction = 'ascending';\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === 'ascending'\r\n    ) {\r\n      direction = 'descending';\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst Home = () => {\r\n\r\n  let loadMoreBtn = <React.Fragment><button onClick={() => setCount(prevCount => prevCount + 3)}>Load more</button></React.Fragment>,\r\n  listed = listings;\r\n  const\r\n    [count, setCount] = useState(9),\r\n    n = listings.length,\r\n    { items, requestSort, sortConfig } = useSortableData(listed),\r\n    getClassNamesFor = (name) => {\r\n      if (!sortConfig) {\r\n        return;\r\n      }\r\n      return sortConfig.key === name ? sortConfig.direction : undefined;\r\n    }\r\n  ;\r\n\r\n  if (count > n) {\r\n    loadMoreBtn = '';\r\n  };\r\n\r\n  return (\r\n    <HomeStyles>\r\n\r\n      <Helmet>\r\n        <title>Pubweb Code Challenge</title>\r\n        <meta name=\"description\" content=\"Pubweb Code Challenge\" />\r\n      </Helmet>\r\n\r\n      <header><img src={companyLogo} alt=\"Clayton Logo\" /></header>\r\n\r\n      <div className=\"sort-bar\">\r\n        <div>{n} homes available</div>\r\n        <div className=\"price-select\">\r\n          Sort by: \r\n          <button\r\n            type=\"button\" \r\n            onClick={() => requestSort('startingPrice')}\r\n            className={getClassNamesFor('startingPrice')}\r\n          >\r\n            Price\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"listings\">\r\n        {items.slice(0, count).map((item, key) => (\r\n          <li key={key} className=\"listing\">\r\n            <HomeListingCard \r\n              key={key}\r\n              imageURL={item.imageURL}\r\n              homeName={item.homeName}\r\n              startingPrice={item.startingPrice}\r\n              beds={item.beds}\r\n              baths={item.baths}\r\n              sqft={item.sqft}\r\n              isMultiSection={item.isMultiSection}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <div className=\"load-more\">{loadMoreBtn}</div>\r\n\r\n      <footer>Copyright 2020 Clayton Homes. All Rights Reserved.</footer>\r\n\r\n    </HomeStyles>\r\n  )\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}